{"remainingRequest":"/home/rido/code/vue-10-apps/node_modules/babel-loader/lib/index.js!/home/rido/code/vue-10-apps/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/rido/code/vue-10-apps/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/rido/code/vue-10-apps/src/pages/Tensorflow.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/rido/code/vue-10-apps/src/pages/Tensorflow.vue","mtime":1612694817699},{"path":"/home/rido/code/vue-10-apps/node_modules/cache-loader/dist/cjs.js","mtime":1610270851788},{"path":"/home/rido/code/vue-10-apps/node_modules/babel-loader/lib/index.js","mtime":1610188258325},{"path":"/home/rido/code/vue-10-apps/node_modules/cache-loader/dist/cjs.js","mtime":1610270851788},{"path":"/home/rido/code/vue-10-apps/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":1610270854965}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvcmlkby9jb2RlL3Z1ZS0xMC1hcHBzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IHsgcmVmIH0gZnJvbSAidnVlIjsKCnJlcXVpcmUoIkB0ZW5zb3JmbG93L3RmanMtYmFja2VuZC1jcHUiKTsKCnJlcXVpcmUoIkB0ZW5zb3JmbG93L3RmanMtYmFja2VuZC13ZWJnbCIpOwoKdmFyIGNvY29Tc2QgPSByZXF1aXJlKCJAdGVuc29yZmxvdy1tb2RlbHMvY29jby1zc2QiKTsKCmV4cG9ydCBkZWZhdWx0IHsKICBzZXR1cDogZnVuY3Rpb24gc2V0dXAoKSB7CiAgICB2YXIgaW1nUmVmID0gcmVmKCIiKTsKICAgIHZhciB2aWRlb1JlZiA9IHJlZigiIik7CiAgICB2YXIgcmVzdWx0ID0gcmVmKFtdKTsKICAgIHZhciBpc0xvYWRpbmcgPSByZWYoZmFsc2UpOwogICAgdmFyIGlzU3RyZWFtaW5nID0gcmVmKGZhbHNlKTsKCiAgICBmdW5jdGlvbiBkZXRlY3QoKSB7CiAgICAgIHJldHVybiBfZGV0ZWN0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9CgogICAgZnVuY3Rpb24gX2RldGVjdCgpIHsKICAgICAgX2RldGVjdCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgaW1nLCBtb2RlbCwgcHJlZGljdGlvbnM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgaXNMb2FkaW5nLnZhbHVlID0gdHJ1ZTsKICAgICAgICAgICAgICAgIGltZyA9IGltZ1JlZi52YWx1ZTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIGNvY29Tc2QubG9hZCgpOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICBtb2RlbCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNzsKICAgICAgICAgICAgICAgIHJldHVybiBtb2RlbC5kZXRlY3QoaW1nKTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgICAgcHJlZGljdGlvbnMgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICAgIGlmIChwcmVkaWN0aW9uc1swXS5jbGFzcyA9PT0gInBlcnNvbiIpIHsKICAgICAgICAgICAgICAgICAgcHJlZGljdGlvbnNbMF0uY2xhc3MgPSAicmlkbyBqYW5jdWsgd2t3ayI7IC8vIHJlc3VsdC52YWx1ZSA9ICJyaWRvIGphbmN1ayB3a3drIjsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICByZXN1bHQudmFsdWUgPSBwcmVkaWN0aW9uczsKCiAgICAgICAgICAgICAgICBpZiAocmVzdWx0LnZhbHVlICE9PSBbXSkgewogICAgICAgICAgICAgICAgICBpc0xvYWRpbmcudmFsdWUgPSBmYWxzZTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiUHJlZGljdGlvbnM6ICIpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2cocHJlZGljdGlvbnMpOwoKICAgICAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKTsKICAgICAgcmV0dXJuIF9kZXRlY3QuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KCiAgICBmdW5jdGlvbiBvcGVuQ2FtZXJhKCkgewogICAgICByZXR1cm4gX29wZW5DYW1lcmEuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KCiAgICBmdW5jdGlvbiBfb3BlbkNhbWVyYSgpIHsKICAgICAgX29wZW5DYW1lcmEgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciBkZXZpY2VzLCBjYW1zLCBjYW1JZDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgaWYgKCFuYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmdldFVzZXJNZWRpYSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDc7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBuYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmVudW1lcmF0ZURldmljZXMoKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgZGV2aWNlcyA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgY2FtcyA9IGRldmljZXMuZmlsdGVyKGZ1bmN0aW9uIChkZXZpY2UpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIGRldmljZS5raW5kID09PSAidmlkZW9pbnB1dCI7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIGNhbUlkID0gY2Ftc1swXS5kZXZpY2VJZDsKICAgICAgICAgICAgICAgIG5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhKHsKICAgICAgICAgICAgICAgICAgdmlkZW86IHsKICAgICAgICAgICAgICAgICAgICBkZXZpY2VJZDogewogICAgICAgICAgICAgICAgICAgICAgZXhhY3Q6IGNhbUlkCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChzdHJlYW0pIHsKICAgICAgICAgICAgICAgICAgaXNTdHJlYW1pbmcudmFsdWUgPSB0cnVlOwogICAgICAgICAgICAgICAgICB2aWRlb1JlZi52YWx1ZS5zcmNPYmplY3QgPSBzdHJlYW07CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpOwogICAgICByZXR1cm4gX29wZW5DYW1lcmEuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KCiAgICBmdW5jdGlvbiBzdG9wU3RyZWFtaW5nKCkgewogICAgICB2YXIgc3RyZWFtID0gdmlkZW9SZWYudmFsdWUuc3JjT2JqZWN0OwogICAgICB2YXIgdHJhY2tzID0gc3RyZWFtLmdldFRyYWNrcygpOwogICAgICB0cmFja3MubWFwKGZ1bmN0aW9uICh0cmFjaykgewogICAgICAgIHJldHVybiB0cmFjay5zdG9wKCk7CiAgICAgIH0pOwogICAgICBpc1N0cmVhbWluZy52YWx1ZSA9IGZhbHNlOwogICAgfQoKICAgIGZ1bmN0aW9uIHNuYXBzaG90KCkgewogICAgICB2YXIgY2FudmFzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiY2FudmFzIik7CiAgICAgIHZhciBjb250ZXh0ID0gY2FudmFzLmdldENvbnRleHQoIjJkIik7CiAgICAgIGNvbnRleHQuZHJhd0ltYWdlKHZpZGVvUmVmLnZhbHVlLCAwLCAwLCAyNzAsIDE1MCk7CiAgICAgIHZhciBkYXRhID0gY2FudmFzLnRvRGF0YVVSTCgiaW1hZ2UvcG5nIik7CiAgICAgIGltZ1JlZi52YWx1ZS5zZXRBdHRyaWJ1dGUoInNyYyIsIGRhdGEpOwogICAgfQoKICAgIHJldHVybiB7CiAgICAgIGltZ1JlZjogaW1nUmVmLAogICAgICByZXN1bHQ6IHJlc3VsdCwKICAgICAgaXNMb2FkaW5nOiBpc0xvYWRpbmcsCiAgICAgIGRldGVjdDogZGV0ZWN0LAogICAgICBvcGVuQ2FtZXJhOiBvcGVuQ2FtZXJhLAogICAgICB2aWRlb1JlZjogdmlkZW9SZWYsCiAgICAgIGlzU3RyZWFtaW5nOiBpc1N0cmVhbWluZywKICAgICAgc3RvcFN0cmVhbWluZzogc3RvcFN0cmVhbWluZywKICAgICAgc25hcHNob3Q6IHNuYXBzaG90CiAgICB9OwogIH0KfTs="},{"version":3,"sources":["/home/rido/code/vue-10-apps/src/pages/Tensorflow.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"flex flex-col w-full my-4\">\n        <div class=\"m-auto\">\n            <div class=\"my-3\">\n                <h2 class=\"text-2xl text-center my-4 text-gray-800\">Tensorflow Object Detection</h2>\n                <div class=\"flex flex-col justify-center\">\n                    <div class=\"text-center\">\n                        <div class=\"flex space-x-2\">\n                            <button\n                                v-if=\"!isStreaming\"\n                                @click=\"openCamera\"\n                                class=\"w-full mb-2 px-4 py-2 bg-gradient-to-r from-red-500 to-pink-500 text-white rounded-lg shadow-md hover:bg-blue-500 transition transition-color focus:outline-none focus:ring focus:ring-indigo-300 focus:ring-offset-1\"\n                            >Open Camera</button>\n\n                            <button\n                                v-else\n                                @click=\"stopStreaming\"\n                                class=\"w-full mb-2 px-4 py-2 bg-gradient-to-r from-red-500 to-pink-500 text-white rounded-lg shadow-md hover:bg-blue-500 transition transition-color focus:outline-none focus:ring focus:ring-indigo-300 focus:ring-offset-1\"\n                            >Stop Streaming</button>\n\n                            <button\n                                @click=\"snapshot\"\n                                class=\"w-full mb-2 px-4 py-2 bg-gradient-to-r from-red-500 to-pink-500 text-white rounded-lg shadow-md hover:bg-blue-500 transition transition-color focus:outline-none focus:ring focus:ring-indigo-300 focus:ring-offset-1\"\n                            >Take foto</button>\n                        </div>\n                    </div>\n\n                    <div class=\"flex justify-center w-full space-x-1 h-52\">\n                        <video ref=\"videoRef\" autoplay=\"true\" width=\"300\" />\n                        <img\n                            class=\"text-center\"\n                            ref=\"imgRef\"\n                            src=\"https://images.unsplash.com/photo-1498050108023-c5249f4df085\"\n                            width=\"300\"\n                            crossorigin=\"anonymous\"\n                        />\n                    </div>\n                    <div class=\"mt-3\">\n                        <button\n                            @click=\"detect\"\n                            class=\"w-full mb-2 px-4 py-2 bg-gradient-to-r from-blue-500 to-indigo-500 text-white rounded-lg shadow-md hover:bg-blue-500 transition transition-color focus:outline-none focus:ring focus:ring-indigo-300 focus:ring-offset-1\"\n                            :class=\"\n                                    !isLoading ? 'focus:ring-opacity-0' : ''\n                                \"\n                        >\n                            <span v-if=\"!isLoading\">Detect</span>\n                            <span v-else>\n                                <svg\n                                    class=\"w-6 h-6\"\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n                                    style=\"\n                                            margin: auto;\n                                            background: none;\n                                            display: block;\n                                            shape-rendering: auto;\n                                        \"\n                                    width=\"200px\"\n                                    height=\"200px\"\n                                    viewBox=\"0 0 100 100\"\n                                    preserveAspectRatio=\"xMidYMid\"\n                                >\n                                    <circle\n                                        cx=\"50\"\n                                        cy=\"50\"\n                                        fill=\"none\"\n                                        stroke=\"#93dbe9\"\n                                        stroke-width=\"10\"\n                                        r=\"35\"\n                                        stroke-dasharray=\"164.93361431346415 56.97787143782138\"\n                                    >\n                                        <animateTransform\n                                            attributeName=\"transform\"\n                                            type=\"rotate\"\n                                            repeatCount=\"indefinite\"\n                                            dur=\"1s\"\n                                            values=\"0 50 50;360 50 50\"\n                                            keyTimes=\"0;1\"\n                                        />\n                                    </circle>\n                                </svg>\n                            </span>\n                        </button>\n                    </div>\n\n                    <div v-if=\"result.length > 0\">\n                        <h3\n                            class=\"text-center my-3 text-xl font-semibold p-2 text-green-500 uppercase\"\n                        >{{ result[0].class }}</h3>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nrequire(\"@tensorflow/tfjs-backend-cpu\");\nrequire(\"@tensorflow/tfjs-backend-webgl\");\nconst cocoSsd = require(\"@tensorflow-models/coco-ssd\");\nexport default {\n    setup() {\n        const imgRef = ref(\"\");\n        const videoRef = ref(\"\");\n        const result = ref([]);\n        const isLoading = ref(false);\n        const isStreaming = ref(false);\n\n        async function detect() {\n            isLoading.value = true;\n            const img = imgRef.value;\n            const model = await cocoSsd.load();\n            const predictions = await model.detect(img);\n            if (predictions[0].class === \"person\") {\n                predictions[0].class = \"rido jancuk wkwk\";\n                // result.value = \"rido jancuk wkwk\";\n            }\n            result.value = predictions;\n            if (result.value !== []) {\n                isLoading.value = false;\n            }\n            console.log(\"Predictions: \");\n            console.log(predictions);\n        }\n\n        async function openCamera() {\n            if (navigator.mediaDevices.getUserMedia) {\n                const devices = await navigator.mediaDevices.enumerateDevices();\n                const cams = devices.filter(\n                    device => device.kind === \"videoinput\"\n                );\n                const camId = cams[0].deviceId;\n                navigator.mediaDevices\n                    .getUserMedia({ video: { deviceId: { exact: camId } } })\n                    .then(stream => {\n                        isStreaming.value = true;\n                        videoRef.value.srcObject = stream;\n                    });\n            }\n        }\n\n        function stopStreaming() {\n            const stream = videoRef.value.srcObject;\n            const tracks = stream.getTracks();\n            tracks.map(track => track.stop());\n            isStreaming.value = false;\n        }\n\n        function snapshot() {\n            const canvas = document.createElement(\"canvas\");\n            const context = canvas.getContext(\"2d\");\n            context.drawImage(videoRef.value, 0, 0, 270, 150);\n            const data = canvas.toDataURL(\"image/png\");\n            imgRef.value.setAttribute(\"src\", data);\n        }\n\n        return {\n            imgRef,\n            result,\n            isLoading,\n            detect,\n            openCamera,\n            videoRef,\n            isStreaming,\n            stopStreaming,\n            snapshot\n        };\n    }\n};\n</script>\n\n<style>\n</style>"],"sourceRoot":""}]}