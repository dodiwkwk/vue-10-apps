{"remainingRequest":"/home/rido/code/vue-10-apps/node_modules/babel-loader/lib/index.js!/home/rido/code/vue-10-apps/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/home/rido/code/vue-10-apps/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/rido/code/vue-10-apps/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/rido/code/vue-10-apps/src/pages/Chat.vue?vue&type=template&id=658eb408","dependencies":[{"path":"/home/rido/code/vue-10-apps/src/pages/Chat.vue","mtime":1611647888837},{"path":"/home/rido/code/vue-10-apps/node_modules/cache-loader/dist/cjs.js","mtime":1610270851788},{"path":"/home/rido/code/vue-10-apps/node_modules/babel-loader/lib/index.js","mtime":1610188258325},{"path":"/home/rido/code/vue-10-apps/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1610270854965},{"path":"/home/rido/code/vue-10-apps/node_modules/cache-loader/dist/cjs.js","mtime":1610270851788},{"path":"/home/rido/code/vue-10-apps/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":1610270854965}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCByZW5kZXJMaXN0IGFzIF9yZW5kZXJMaXN0LCBGcmFnbWVudCBhcyBfRnJhZ21lbnQsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jayBhcyBfY3JlYXRlQmxvY2ssIHRvRGlzcGxheVN0cmluZyBhcyBfdG9EaXNwbGF5U3RyaW5nLCB2TW9kZWxUZXh0IGFzIF92TW9kZWxUZXh0LCB3aXRoS2V5cyBhcyBfd2l0aEtleXMsIHdpdGhEaXJlY3RpdmVzIGFzIF93aXRoRGlyZWN0aXZlcyB9IGZyb20gInZ1ZSI7CnZhciBfaG9pc3RlZF8xID0gewogIGNsYXNzOiAiZmxleCBmbGV4LWNvbCB3LWZ1bGwgbXktNCIKfTsKdmFyIF9ob2lzdGVkXzIgPSB7CiAgY2xhc3M6ICJtLWF1dG8iCn07Cgp2YXIgX2hvaXN0ZWRfMyA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImgxIiwgewogIGNsYXNzOiAidGV4dC0yeGwgdGV4dC1jZW50ZXIgbXktMiIKfSwgIlJlYWx0aW1lIENoYXQgdnVlIiwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzQgPSB7CiAgY2xhc3M6ICJib3JkZXIgcm91bmRlZCBiZy13aGl0ZSB3LTk2Igp9Owp2YXIgX2hvaXN0ZWRfNSA9IHsKICBjbGFzczogImgtOTYgcC00IGZsZXggZmxleC1jb2wgc3BhY2UteS00IG92ZXJmbG93LXktc2Nyb2xsIgp9Owp2YXIgX2hvaXN0ZWRfNiA9IHsKICBjbGFzczogImgtOCBwLTIiCn07CmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJkaXYiLCBfaG9pc3RlZF8xLCBbX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF8yLCBbX2hvaXN0ZWRfMywgX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF80LCBbX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF81LCBbKF9vcGVuQmxvY2sodHJ1ZSksIF9jcmVhdGVCbG9jayhfRnJhZ21lbnQsIG51bGwsIF9yZW5kZXJMaXN0KCRzZXR1cC5zdGF0ZS5jaGF0cywgZnVuY3Rpb24gKGNoYXQpIHsKICAgIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygiZGl2IiwgewogICAgICBrZXk6IGNoYXQubWVzc2FnZSwKICAgICAgY2xhc3M6IFsidy1mdWxsIiwgY2hhdC51c2VySWQgPT09ICRzZXR1cC5zdGF0ZS51c2VySWQgPyAndGV4dC1yaWdodCcgOiAnJ10KICAgIH0sIFtfY3JlYXRlVk5vZGUoInNwYW4iLCB7CiAgICAgIGNsYXNzOiBbInAtMiByb3VuZGVkLWxnIHRleHQtd2hpdGUgc2hhZG93IiwgY2hhdC51c2VySWQgPT09ICRzZXR1cC5zdGF0ZS51c2VySWQgPyAnYmctZ3JlZW4tNTAwJyA6ICdiZy1ibHVlLTUwMCddCiAgICB9LCBfdG9EaXNwbGF5U3RyaW5nKGNoYXQubWVzc2FnZSksIDMKICAgIC8qIFRFWFQsIENMQVNTICovCiAgICApXSwgMgogICAgLyogQ0xBU1MgKi8KICAgICk7CiAgfSksIDEyOAogIC8qIEtFWUVEX0ZSQUdNRU5UICovCiAgKSldKSwgX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF82LCBbX3dpdGhEaXJlY3RpdmVzKF9jcmVhdGVWTm9kZSgiaW5wdXQiLCB7CiAgICBjbGFzczogInctZnVsbCBwLTIgYm9yZGVyIHJvdW5kZWQtbGcgc2hhZG93IGZvY3VzOm91dGxpbmUtbm9uZSBmb2N1czpyaW5nIGZvY3VzOnJpbmctYmx1ZS00MDAgZm9jdXM6cmluZy1vZmZzZXQtMiIsCiAgICBwbGFjZWhvbGRlcjogIlR5cGUgbWVzc2FnZS4uLiIsCiAgICByZWY6ICJmb2N1c1JlZiIsCiAgICAib25VcGRhdGU6bW9kZWxWYWx1ZSI6IF9jYWNoZVsxXSB8fCAoX2NhY2hlWzFdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICByZXR1cm4gJHNldHVwLnN0YXRlLm1lc3NhZ2UgPSAkZXZlbnQ7CiAgICB9KSwKICAgIG9uS2V5ZG93bjogX2NhY2hlWzJdIHx8IChfY2FjaGVbMl0gPSBfd2l0aEtleXMoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJHNldHVwLmFkZE1lc3NhZ2UgJiYgJHNldHVwLmFkZE1lc3NhZ2UuYXBwbHkoJHNldHVwLCBhcmd1bWVudHMpOwogICAgfSwgWyJlbnRlciJdKSkKICB9LCBudWxsLCA1NDQKICAvKiBIWURSQVRFX0VWRU5UUywgTkVFRF9QQVRDSCAqLwogICksIFtbX3ZNb2RlbFRleHQsICRzZXR1cC5zdGF0ZS5tZXNzYWdlXV0pXSldKV0pXSk7Cn0="},{"version":3,"sources":["/home/rido/code/vue-10-apps/src/pages/Chat.vue"],"names":[],"mappings":";;AACS,EAAA,KAAK,EAAC;;;AACF,EAAA,KAAK,EAAC;;;8BACP,YAAA,CAA4D,IAA5D,EAA4D;AAAxD,EAAA,KAAK,EAAC;AAAkD,CAA5D,EAAsC,mBAAtC,EAAuD,CAAA;AAAA;AAAvD,C;;;AACK,EAAA,KAAK,EAAC;;;AACF,EAAA,KAAK,EAAC;;;AAoBN,EAAA,KAAK,EAAC;;;uBAxBvB,YAAA,CAmCM,KAnCN,EAAA,UAAA,EAmCM,CAlCF,YAAA,CAiCM,KAjCN,EAAA,UAAA,EAiCM,CAhCF,UAgCE,EA/BF,YAAA,CA8BM,KA9BN,EAAA,UAAA,EA8BM,CA7BF,YAAA,CAmBM,KAnBN,EAAA,UAAA,EAmBM,E,kBAlBF,YAAA,CAiBM,SAjBN,EAiBM,IAjBN,EAiBM,WAAA,CAhBa,MAAA,CAAA,KAAA,CAAM,KAgBnB,EAhBwB,UAAnB,IAAmB,EAAf;yBADf,YAAA,CAiBM,KAjBN,EAiBM;AAfD,MAAA,GAAG,EAAE,IAAI,CAAC,OAeT;AAdF,MAAA,KAAK,EAAA,CAAC,QAAD,EACgC,IAAI,CAAC,MAAL,KAAgB,MAAA,CAAA,KAAA,CAAM,MAAtB,GAA4B,YAA5B,GAA4B,EAD5D;AAcH,KAjBN,E,CAQI,YAAA,CAQC,MARD,EAQC;AAPG,MAAA,KAAK,EAAA,CAAC,kCAAD,EACoC,IAAI,CAAC,MAAL,KAAgB,MAAA,CAAA,KAAA,CAAM,MAAtB,G,cAAA,G,aADpC;AAOR,KARD,E,iBAOQ,IAAI,CAAC,O,CAPb,EAOoB;AAAA;AAPpB,K,CARJ,E;;AAAA,K;GAiBM,CAjBN,E;;AAAA,GAkBE,EAnBN,CA6BE,EATF,YAAA,CAQM,KARN,EAAA,UAAA,EAQM,C,gBAPF,YAAA,CAME,OANF,EAME;AALE,IAAA,KAAK,EAAC,2GAKR;AAJE,IAAA,WAAW,EAAC,iBAId;AAHE,IAAA,GAAG,EAAC,UAGN;;aAFW,MAAA,CAAA,KAAA,CAAM,OAAN,GAAa,M;MAExB;AADG,IAAA,SAAO,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,SAAA,CAAA;AAAA,aAAQ,MAAA,CAAA,UAAA,IAAA,MAAA,CAAA,UAAA,OAAA,MAAA,YAAR;AAAA,KAAA,EAAkB,CAAA,OAAA,CAAlB,CAAA;AACV,GANF,E,IAAA,E;;AAAA,G,iBAIa,MAAA,CAAA,KAAA,CAAM,O,GAGjB,CARN,CASE,CA9BN,CA+BE,CAjCN,CAkCE,CAnCN,C","sourcesContent":["<template>\n    <div class=\"flex flex-col w-full my-4\">\n        <div class=\"m-auto\">\n            <h1 class=\"text-2xl text-center my-2\">Realtime Chat vue</h1>\n            <div class=\"border rounded bg-white w-96\">\n                <div class=\"h-96 p-4 flex flex-col space-y-4 overflow-y-scroll\">\n                    <div\n                        v-for=\"chat in state.chats\"\n                        :key=\"chat.message\"\n                        class=\"w-full\"\n                        :class=\"\n                            chat.userId === state.userId ? 'text-right' : ''\n                        \"\n                    >\n                        <span\n                            class=\"p-2 rounded-lg text-white shadow\"\n                            :class=\"\n                                chat.userId === state.userId\n                                    ? 'bg-green-500'\n                                    : 'bg-blue-500'\n                            \"\n                            >{{ chat.message }}</span\n                        >\n                    </div>\n                </div>\n                <div class=\"h-8 p-2\">\n                    <input\n                        class=\"w-full p-2 border rounded-lg shadow focus:outline-none focus:ring focus:ring-blue-400 focus:ring-offset-2\"\n                        placeholder=\"Type message...\"\n                        ref=\"focusRef\"\n                        v-model=\"state.message\"\n                        @keydown.enter=\"addMessage\"\n                    />\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { onMounted, reactive, ref } from \"vue\";\nimport firebase from \"../utilities/firebase\";\nexport default {\n    setup() {\n        const focusRef = ref(\"\");\n        const state = reactive({\n            chats: {},\n            message: \"\",\n            userId: null,\n        });\n\n        onMounted(async () => {\n            // focus input text\n            focusRef.value.focus();\n\n            // for get data chat from realtime database\n            const response = await firebase\n                .database()\n                .ref(\"chats\")\n                .once(\"value\");\n            state.chats = response.val();\n\n            // whatcing for changes realtime database\n            await firebase\n                .database()\n                .ref(\"chats\")\n                .on(\"value\", (snapshot) => {\n                    state.chats = snapshot.val();\n                });\n\n            // get id user login\n            state.userId = await firebase.auth().currentUser.uid;\n        });\n\n        // function for push/add message to firebase realtime database\n        const addMessage = async () => {\n            const newChat = await firebase.database().ref(\"chats\");\n            newChat.push().set({\n                userId: state.userId,\n                message: state.message,\n            });\n            // clear text field after done push message\n            state.message = \"\";\n        };\n\n        return { state, addMessage, focusRef };\n    },\n};\n</script>\n\n<style>\n</style>"],"sourceRoot":""}]}